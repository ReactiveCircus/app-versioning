package io.github.reactivecircus.appversioning.tasks

import org.gradle.api.DefaultTask
import org.gradle.api.file.RegularFileProperty
import org.gradle.api.provider.Property
import org.gradle.api.tasks.Internal
import org.gradle.api.tasks.TaskAction

/**
 * Prints the latest versionCode and versionName generated by the Android App Versioning Plugin to the console,
 * or a warning message if the versionCode and versionName generated by this plugin are not available.
 * Note that these might not be the final versionCode and versionName used in the merged manifest file in the APK.
 */
abstract class PrintAppVersionInfo : DefaultTask() {

    @get:Internal
    abstract val versionCodeFile: RegularFileProperty

    @get:Internal
    abstract val versionNameFile: RegularFileProperty

    @get:Internal
    abstract val buildVariantName: Property<String>

    @TaskAction
    fun print() {
        logger.quiet("Version code file: ${versionCodeFile.asFile.get().exists()}")
        if (versionCodeFile.asFile.get().exists() && versionNameFile.asFile.get().exists()) {
            logger.quiet(
                """
                    App version info generated by Android App Versioning Plugin:
                    Build variant: ${buildVariantName.get()}
                    versionCode: ${versionCodeFile.get().asFile.readText().trim().toInt()}
                    versionName: "${versionNameFile.get().asFile.readText().trim()}"
                """.trimIndent()
            )
        } else {
            logger.warn("No app version info (versionCode and versionName) generated by the Android App Versioning Plugin for the \"${buildVariantName.get()}\" variant is available.")
        }
    }

    companion object {
        const val TASK_NAME_PREFIX = "printAppVersionInfo"
        const val TASK_DESCRIPTION_PREFIX = "Prints the versionCode and versionName generated by Android App Versioning Plugin (if available) to the console"
    }
}
