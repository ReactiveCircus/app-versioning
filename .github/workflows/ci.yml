name: CI

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'

env:
  CI: true
  GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx4g -XX:+HeapDumpOnOutOfMemoryError"
  TERM: dumb

jobs:
  assemble:
    name: Assemble
    runs-on: ubuntu-latest
    env:
      JAVA_TOOL_OPTIONS: -Xmx4g -XX:+UseParallelGC

    steps:
      - uses: actions/checkout@v3
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '19'
      - uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true
      - name: Assemble
        run: ./gradlew assemble

  checks:
    name: Checks (unit tests, static analysis, plugin validations and binary compatibility API check)
    runs-on: ubuntu-latest
    env:
      JAVA_TOOL_OPTIONS: -Xmx4g -XX:+UseParallelGC

    steps:
      - uses: actions/checkout@v3
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '19'
      - uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true
      - name: Checks
        run: ./gradlew test detekt validatePlugins apiCheck

  functional-tests:
    name: Functional tests
    runs-on: ubuntu-latest
    env:
      JAVA_TOOL_OPTIONS: -Xmx4g -XX:+UseParallelGC
      AGP_VERSION: ${{ matrix.agp-version }}
    strategy:
      matrix:
        agp-version: [ 7.3.1, 7.4.2, 8.0.1, 8.1.0-beta01, 8.2.0-alpha02 ]

    steps:
      - uses: actions/checkout@v3
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '19'
      - name: Configure git user
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
      - uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true
      # TODO remove
      - name: Accept build-tools 34.0.0 license
        run: echo "y" | /usr/local/lib/android/sdk/cmdline-tools/latest/bin/sdkmanager "build-tools;34.0.0-rc3"
      - name: Functional tests
        run: ./gradlew functionalTest
      - name: Upload test reports
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: build/reports/tests/functionalTest
          retention-days: 3

  deploy-snapshot:
    name: Deploy snapshot
    needs: [assemble, checks, functional-tests]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      JAVA_TOOL_OPTIONS: -Xmx4g -XX:+UseParallelGC
      ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_NEXUS_USERNAME }}
      ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_NEXUS_PASSWORD }}

    steps:
      - uses: actions/checkout@v3
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '19'
      - uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true
      - name: Deploy snapshot
        run: ./gradlew publish
